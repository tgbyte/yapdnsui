extends layout

block content
  div.container-fluid
       // Page header 
      .page-header
        h2
          | Domains
          | &nbsp;
          small= data.length
            | &nbsp;domains in backend
        .btn-toolbar(style='margin-bottom: 10px;')
          .btn-group.pull-right
            button.btn.btn-default.add-domain(id="add-domain", data-toggle="modal", data-target="#add-domain-modal")
              span.glyphicon.glyphicon-plus
              | &nbsp;Add domain
            button.btn.btn-default.import-zone.disabled(id="import-zone", data-toggle="modal", data-target="#import-zone-modal")
              span.glyphicon.glyphicon-import
              | &nbsp;Import zone

      .modal.fade.in(id="add-domain-modal", tabindex="-1", role="dialog", aria-labelledby="add-domain-label", aria-hidden="true")
       .modal-dialog
        .modal-content
         .modal-header
          button(type="button", class="close", data-dismiss="modal", aria-hidden="true") &times;
          h4(class="modal-title", id="add-domain-label")
            #mod-edit-operation
         .modal-body
          form.modal-form(id="form-add-domain", method='POST', action='/servers/#{serverselected.id}/add')
            fieldset
              .form-group
                label.control-label(for='name') Zone/Domain name:
                .controls
                    input.form-control(id='mod-edit-name', name='name', type='text', placeholder='eg: example.com')
              .form-group
                label.control-label(for='type') Zone Type:
                .controls
                    label
                      input#mod-edit-type-master(type='radio', name='type', value='MASTER')
                      strong Master
                      span.help-block Send out notifications about zone changes to slaves.
                    label
                      input#mod-edit-type-slave(type='radio', name='type', value='SLAVE')
                      strong Slave
                      span.help-block Retrieve records from master, store in database.
                    label
                      input#mod-edit-type-native(type='radio', name='type', value='NATIVE')
                      strong Native
                      span.help-block Rely on database replication, don't replicate via DNS.
              .form-group
                #mod-edit-master-box.hide
                  label.control-label(for='mod-edit-master') Zone master:
                  .controls
                    input.form-control(id='mod-edit-master', name='master', type='text', placeholder='1.2.3.4,9.8.7.6')
                    span.help-block IP Address of the master host, which PDNS should replicate with.
            .modal-footer
              a.btn.btn-default(href='#', data-dismiss='modal', aria-hidden="true") Cancel
              button.btn.btn-success(href='', type="submit", id="mod-edit-submit") Add domain

      .modal.fade.in(id="del-domain-modal", tabindex="-1", role="dialog", aria-labelledby="del-domain-label", aria-hidden="true")
       .modal-dialog
        .modal-content
         .modal-header
          button(type="button", class="close", data-dismiss="modal", aria-hidden="true") &times;
          h4(class="modal-title", id="del-domain-label")
            #mod-delete-operation
         .modal-body
          .alert.alert-warning
            p
              strong Warning!
            | This operation will delete the domain and all associated records for 
            strong#mod-delete-text-name
            | <br>Are you sure you want to do this ?
         .modal-footer
          a.btn.btn-default(href='#', data-dismiss='modal', aria-hidden="true") Cancel
          a.btn.btn-danger#mod-delete-submit(href='') Delete domain

      div
        table.table.table-striped.table-condensed.table-hover#domains-table(width="100%", name="domains-table")
          thead
            tr
              th Name
              th Type
              th Masters
              th DNSSEC
              th Serial
              th
          tbody
           each item in data
            tr
              td
                a(href='/servers/#{serverselected.id}/domains/#{item.id}')= item.name
              td= item.kind
              td= item.masters
              td
                -if (item.dnssec == true)
                   span.fa.fa-lock.fa-lg
                -else
                   span.fa.fa-unlock.fa-lg

                   | &nbsp;
                   = item.dnssec
              td= item.serial
              td.domains-value-action
                // row button group to spin up modal or delete domain 
                .btn-group
                  -if (item.kind == "slave" || item.kind == "Slave")
                     btn.btn.btn-default.btn-xs.notify-zone(id="notify-zone", rel="tooltip", title="Send a DNS NOTIFY to all slaves", data-id="#{item.id}", data-server="#{serverselected.id}", href="#")
                       span.glyphicon.glyphicon-retweet
                     btn.btn.btn-default.btn-xs.retrieve-zone(id="retrieve-zone", rel="tooltip", title="Retrieves the zone from the master", data-id="#{item.id}", data-server="#{serverselected.id}", href="#")
                       span.glyphicon.glyphicon-random
                  a.btn.btn.btn-default.btn-xs.export-zone(id="export-zone", rel="tooltip", title="Returns the zone in AXFR format", href="/servers/#{serverselected.id}/domains/export/#{item.id}")
                    span.glyphicon.glyphicon-export
                  a.btn.btn.btn-default.btn-xs.disabled.verify-zone(id="verify-zone", rel="tooltip", title="Verify zone contents/configuration", href="#")
                    span.glyphicon.glyphicon-ok
                  a.btn.btn.btn-default.btn-xs.view-domain(id="view-domain", rel="tooltip", title="View records in zone", href="/servers/#{serverselected.id}/domains/#{item.id}")
                    span.glyphicon.glyphicon-eye-open
                  btn.btn.btn-default.btn-xs.edit-domain(id="edit-domain", data-toggle="modal", href="#add-domain-modal", data-id="#{item.id}", data-name="#{item.name}", data-kind="#{item.kind}", data-masters="#{item.masters}", rel="tooltip", title="Edit domain")
                    span.glyphicon.glyphicon-pencil
                  btn.btn.btn-danger.btn-xs.del-domain(id="del-domain", data-toggle="modal", href="#del-domain-modal", data-id="#{item.id}", data-name="#{item.name}", rel="tooltip", title="Delete domain")
                    span.glyphicon.glyphicon-trash
                // row button end 

  include inc/footer

  // Bootstrap plugin form validation
  link(rel='stylesheet', href='/form.validation/dist/css/formValidation.min.css')
  script(src='/form.validation/dist/js/formValidation.min.js')
  script(src='/form.validation/dist/js/framework/bootstrap.js')
  // datatables
  script(src='/datatables/media/js/jquery.dataTables.min.js')
  script(src='/datatables/media/js/dataTables.bootstrap.min.js')
  // PNotify
  script(src='/pnotify/pnotify.core.js')
  // domains UI
  script(src='/javascripts/ui_domains.js')

  | <script type="text/javascript">
  | $(document).ready(function() {
  |  $('#domains-table').dataTable();
  |  $(document).on("click", ".add-domain", function () {
  |      $('#form-add-domain').formValidation('resetForm', true);
  |      $('#mod-edit-operation').html("Add domain");
  |      $('#mod-edit-name').val("");
  |      $('#mod-edit-type-master').prop('checked', true);
  |      $('#mod-edit-master-box').attr("class", "hide");
  |      $('#mod-edit-master').val("");
  |      $('#mod-edit-submit').html("Add");
  |      $('#mod-edit-submit').attr("href", "/servers/#{serverselected.id}/domains/add");
  |      $('#add-domain-modal').modal('show');
  |  });
  |  $(document).on("click", ".edit-domain", function () {
  |      var DomainId = $(this).data('id'),
  |          DomainName = $(this).data('name'),
  |          DomainKind = $(this).data('kind').toLowerCase(),
  |          DomainKindId = "#mod-edit-type-"+DomainKind,
  |          DomainMasters = $(this).data('masters');
  |      $('#form-add-domain').formValidation('resetForm', true);
  |      $('#mod-edit-operation').html("Edit "+DomainName);
  |      $('#mod-edit-name').val( DomainName );
  |      $(DomainKindId).prop('checked', true );
  |      if (DomainKind == 'native') {
  |          $('#mod-edit-master-box').attr("class", "");
  |          $('#mod-edit-master').val( DomainMasters );
  |      } else {
  |          $('#mod-edit-master-box').attr("class", "hide");
  |          $('#mod-edit-master').val("");
  |      }
  |      $('#mod-edit-submit').html("Update");
  |      $('#mod-edit-submit').attr("href", "/servers/#{serverselected.id}/domains/edit/"+DomainId);
  |      $('#add-domain-modal').modal('show');
  |  });
  |  $(document).on("click", ".del-domain", function () {
  |      var DomainId = $(this).data('id');
  |      var DomainName = $(this).data('name');
  |      $('#mod-delete-operation').html("Delete "+DomainName);
  |      $('#mod-delete-text-name').html(DomainName);
  |      $('#mod-delete-submit').html("Delete");
  |      $('#mod-delete-submit').attr("href", "/servers/#{serverselected.id}/del/"+DomainId);
  |      $('#del-domain-modal').modal('show');
  |  });
  |  // On update radio type
  |  $('input[type=radio][name=type]').change(function() {
  |     if (this.value == 'NATIVE') {
  |          $('#mod-edit-master-box').attr("class", "");
  |     } else {
  |          $('#mod-edit-master-box').attr("class", "hide");
  |     }
  |  });
  | });
  | </script>
